1.runtime of algorithm mathematically

c1 = 1
c2 = Σ(i=1 to n) 1
c3 = Σ(j=1 to n) 1
c4 = Σ(i=1 to n) Σ(j=1 to n) 1


T(n) = c1*1 + c2*Σ(i=1 to n)(n+1) + c3*Σ(j=1 to n) n(n+1) + c4*Σ(i=1 to n) Σ(j=1 to n) n^2
     = c1 + (c2*c3)(n+1)*n + c4 (n^2)
     = a(n)^2 + b(n) + c
Time complexity is O(n^2)



2.Implementation of the function in PYTHON


import timeit

def calc_x(n):
    x = 1
    for i in range(1, n + 1):
        for j in range(1, n + 1):
            x = x + 1
    return x

# benchmarking it to plot the graph for time vs input
exec_times = [timeit.timeit(lambda: calc_x(n), number=1) for n in [1, 2, 3, 10, 100, 500, 1000, 5000, 10000, 20000]]

for n, execution_time in zip([1, 2, 3, 10, 100, 500, 1000, 5000, 10000, 20000], exec_times):
    print(f"For n={n}, Execution Time: {execution_time:.4f} seconds")










